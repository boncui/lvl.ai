// Frontend types based on backend EmailTask model
import { IBaseTask, TaskType } from './BaseTask';

// ---------- EMAIL TASK INTERFACE ----------
export interface IEmailTask extends IBaseTask {
  // Email-specific fields
  recipient: string;
  recipientName?: string;
  subject: string;
  emailType: 'personal' | 'work' | 'newsletter' | 'follow_up' | 'meeting_request' | 'other';
  emailPriority: 'low' | 'medium' | 'high' | 'urgent';
  isReply: boolean;
  originalEmailId?: string; // Reference to original email if this is a reply
  emailAttachments?: string[]; // Email attachments
  draftContent?: string; // Draft content
  sentAt?: Date;
  readAt?: Date;
  replyReceived?: boolean;
  followUpDate?: Date;
  emailTemplate?: string; // Template used for this email
  
  // Virtual properties
  isOverdue: boolean;
  needsFollowUp: boolean;
  
  // Methods
  markAsSent(): Promise<this>;
  markReplyReceived(): Promise<this>;
  scheduleFollowUp(followUpDate: Date): Promise<this>;
}

// ---------- FRONTEND-SPECIFIC TYPES ----------
export interface EmailTask {
  _id: string;
  title: string;
  description?: string;
  taskType: TaskType.EMAIL;
  priority: 'low' | 'medium' | 'high' | 'urgent';
  status: 'pending' | 'in_progress' | 'completed' | 'cancelled';
  dueDate?: Date;
  startDate?: Date;
  completedAt?: Date;
  estimatedDuration?: number;
  actualDuration?: number;
  tags: string[];
  assignee: string;
  assignedBy?: string;
  collaborators: string[];
  location?: string;
  isRecurring: boolean;
  recurringPattern?: {
    frequency: 'daily' | 'weekly' | 'monthly' | 'yearly';
    interval: number;
    daysOfWeek?: number[];
    dayOfMonth?: number;
    endDate?: Date;
  };
  parentTask?: string;
  subtasks: string[];
  attachments: Array<{
    filename: string;
    url: string;
    uploadedAt: Date;
  }>;
  notes: Array<{
    content: string;
    createdAt: Date;
    createdBy: string;
  }>;
  reminders: Array<{
    date: Date;
    message: string;
    isSent: boolean;
  }>;
  xpValue: number;
  autoGenerated?: boolean;
  personalCategory?: 'health' | 'fitness' | 'hobby' | 'learning' | 'travel' | 'family' | 'finance' | 'home' | 'other';
  isPrivate?: boolean;
  personalNotes?: string;
  moodBefore?: string;
  moodAfter?: string;
  energyLevel?: 1 | 2 | 3 | 4 | 5;
  weatherDependent?: boolean;
  weatherCondition?: string;
  seasonality?: string[];
  personalGoals?: string[];
  reflection?: string;
  photos?: string[];
  cost?: number;
  actualCost?: number;
  createdAt: Date;
  updatedAt: Date;
  
  // Email-specific fields
  recipient: string;
  recipientName?: string;
  subject: string;
  emailType: 'personal' | 'work' | 'newsletter' | 'follow_up' | 'meeting_request' | 'other';
  emailPriority: 'low' | 'medium' | 'high' | 'urgent';
  isReply: boolean;
  originalEmailId?: string; // Reference to original email if this is a reply
  emailAttachments?: string[]; // Email attachments
  draftContent?: string; // Draft content
  sentAt?: Date;
  readAt?: Date;
  replyReceived?: boolean;
  followUpDate?: Date;
  emailTemplate?: string; // Template used for this email
  
  // Virtual properties (computed on frontend)
  isOverdue: boolean;
  needsFollowUp: boolean;
}
